# Generated by Django 5.2.1 on 2025-06-03 09:58

from django.db import migrations
from django.contrib.postgres.operations import TrigramExtension
from django.contrib.postgres.search import SearchVector


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0006_articleshare_articlelike'),
    ]

    operations = [
        # Activer l'extension trigram pour une recherche plus flexible
        TrigramExtension(),
        
        # Ajouter des index GIN pour optimiser la recherche full-text
        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS blog_article_search_idx 
            ON blog_article 
            USING GIN(to_tsvector('french', title || ' ' || content || ' ' || excerpt));
            """,
            reverse_sql="""
            DROP INDEX IF EXISTS blog_article_search_idx;
            """
        ),
        
        # Index pour optimiser les recherches par popularit√©
        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS blog_article_popularity_idx 
            ON blog_article (views_count + likes_count * 2 + shares_count * 3, created_at DESC);
            """,
            reverse_sql="""
            DROP INDEX IF EXISTS blog_article_popularity_idx;
            """
        ),
        
        # Index composite pour optimiser les filtres
        migrations.RunSQL(
            """
            CREATE INDEX CONCURRENTLY IF NOT EXISTS blog_article_filters_idx 
            ON blog_article (status, category_id, author_id, created_at DESC);
            """,
            reverse_sql="""
            DROP INDEX IF EXISTS blog_article_filters_idx;
            """
        ),
    ]
